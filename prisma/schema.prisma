generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["multiSchema"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
  schemas  = ["Auth", "Chat", "Event"]
}

model Chat {
  id        Int       @id @default(autoincrement())
  from      Int
  to        Int
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  Message   Message[]
  sender    User      @relation("Sender", fields: [from], references: [id])
  recipient User      @relation("Recipient", fields: [to], references: [id])

  @@unique([from, to], name: "user")
  @@schema("Chat")
}

model Message {
  id        Int      @id @default(autoincrement())
  chatId    Int
  message   String
  from      Int
  to        Int
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  Chat      Chat     @relation(fields: [chatId], references: [id])

  @@schema("Chat")
}

model Events {
  id         Int         @id @default(autoincrement())
  cattleId   Int?
  cattleName String
  dateTime   DateTime
  message    String
  userId     Int?
  status     EventStatus @default(Pending)
  User       User?       @relation(fields: [userId], references: [id])

  @@schema("Event")
}

enum EventStatus {
  Pending
  Done
  Cancel

  @@schema("Event")
}

model Profile {
  id        Int      @id @default(autoincrement())
  country   String
  state     String?
  city      String?
  district  String?
  image     String?
  createdAt DateTime @default(now())
  updatedAt DateTime
  userId    Int      @unique
  User      User     @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@schema("Auth")
}

model User {
  id            Int      @id @default(autoincrement())
  username      String
  email         String   @unique
  password      String
  number        String   @unique
  isVerified    Boolean  @default(false)
  createdAt     DateTime @default(now())
  updatedAt     DateTime
  Profile       Profile?
  chatsSent     Chat[]   @relation("Sender")
  chatsReceived Chat[]   @relation("Recipient")
  events        Events[]

  @@schema("Auth")
}
